rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // 사용자 프로필 문서
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow read: if request.auth != null; // 다른 사용자의 기본 정보 읽기 허용
      // 러닝매너 평가를 통한 communityStats 업데이트 허용
      allow update: if request.auth != null && 
        request.resource.data.diff(resource.data).affectedKeys().hasOnly(['communityStats']);
    }
    
    // 이벤트/모임 문서
    match /events/{eventId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.organizerId;
      allow update, delete: if request.auth != null && 
        (request.auth.uid == resource.data.organizerId || 
         request.auth.uid in resource.data.participants ||
         request.auth.uid in request.resource.data.participants);
    }
    
    // 종료된 이벤트
    match /endedEvents/{eventId} {
      allow read: if request.auth != null && 
        request.auth.uid in resource.data.participants;
      allow create: if request.auth != null;
      allow update: if request.auth != null && 
        request.auth.uid in resource.data.participants;
    }
    
    // 커뮤니티 게시글
    match /posts/{postId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.authorId;
      allow update: if request.auth != null && 
        (request.auth.uid == resource.data.authorId || 
         // 좋아요 관련 필드만 업데이트 허용
         (request.resource.data.diff(resource.data).affectedKeys().hasOnly(['likes', 'comments'])));
      allow delete: if request.auth != null && request.auth.uid == resource.data.authorId;
      
      // 댓글 하위 컬렉션 (필요시)
      match /comments/{commentId} {
        allow read: if request.auth != null;
        allow create: if request.auth != null && request.auth.uid == request.resource.data.authorId;
        allow update, delete: if request.auth != null && request.auth.uid == resource.data.authorId;
      }
      
      // 좋아요 하위 컬렉션 (필요시)
      match /likes/{likeId} {
        allow read: if request.auth != null;
        allow create, delete: if request.auth != null && request.auth.uid == request.resource.data.userId;
      }
    }
    
    // 채팅방
    match /chatRooms/{chatId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update: if request.auth != null && 
        (request.auth.uid in resource.data.participants ||
         request.auth.uid in request.resource.data.participants ||
         request.auth.uid == resource.data.createdBy);
      allow delete: if request.auth != null && 
        (request.auth.uid == resource.data.createdBy ||
         request.auth.uid == resource.data.organizerId);
    }
    
    // 채팅 메시지
    match /chatRooms/{chatId}/messages/{messageId} {
      allow read, list: if request.auth != null;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.senderId;
      allow delete: if request.auth != null && 
        (request.auth.uid == resource.data.senderId ||
         // 모임 생성자(채팅방 소유자)는 모든 메시지 삭제 가능
         request.auth.uid == get(/databases/$(database)/documents/chatRooms/$(chatId)).data.organizerId);
    }
    
    // 알림
    match /notifications/{notificationId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null;
    }
    
    // 모임 알림
    match /meetingNotifications/{notificationId} {
      allow read, write, update, list: if request.auth != null && request.auth.uid == resource.data.targetUserId;
      allow create: if request.auth != null;
    }
    
    // 평가/리뷰
    match /evaluations/{evaluationId} {
      // 평가 완료 여부 확인을 위해 인증된 사용자는 읽기 가능
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.evaluatorId;
      allow update: if request.auth != null && request.auth.uid == resource.data.evaluatorId;
      allow delete: if request.auth != null && request.auth.uid == resource.data.evaluatorId;
    }
    
    // 사용자 통계
    match /userStats/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // 커뮤니티 통계
    match /communityStats/{statId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null;
    }
    
    // 앱 설정
    match /app_config/{configId} {
      allow read: if request.auth != null;
    }
  }
} 