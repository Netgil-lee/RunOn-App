rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // 사용자 프로필 문서
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      allow read: if request.auth != null; // 다른 사용자의 기본 정보 읽기 허용
    }
    
    // 이벤트/모임 문서
    match /events/{eventId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.auth.uid == resource.data.organizerId;
      allow update, delete: if request.auth != null && 
        (request.auth.uid == resource.data.organizerId || 
         request.auth.uid in resource.data.participants);
    }
    
    // 종료된 이벤트
    match /endedEvents/{eventId} {
      allow read: if request.auth != null && 
        request.auth.uid in resource.data.participants;
      allow create: if request.auth != null;
      allow update: if request.auth != null && 
        request.auth.uid in resource.data.participants;
    }
    
    // 커뮤니티 게시글
    match /posts/{postId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.authorId;
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.authorId;
    }
    
    // 채팅방
    match /chatRooms/{chatId} {
      allow read, write: if request.auth != null && 
        request.auth.uid in resource.data.participants;
      allow create: if request.auth != null;
    }
    
    // 채팅 메시지
    match /chatRooms/{chatId}/messages/{messageId} {
      allow read: if request.auth != null && 
        request.auth.uid in get(/databases/$(database)/documents/chatRooms/$(chatId)).data.participants;
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.senderId;
    }
    
    // 알림
    match /notifications/{notificationId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null;
    }
    
    // 평가/리뷰
    match /evaluations/{evaluationId} {
      allow read: if request.auth != null && 
        (request.auth.uid == resource.data.evaluatorId || 
         request.auth.uid == resource.data.evaluatedUserId);
      allow create: if request.auth != null && request.auth.uid == request.resource.data.evaluatorId;
    }
  }
} 